import os
from dotenv import load_dotenv
from telegram import Update, KeyboardButton, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, ContextTypes, CommandHandler, MessageHandler, filters

load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")
MOD_GROUP_ID = int(os.getenv("MOD_GROUP_ID"))

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    buttons = [
        [KeyboardButton("ü¶∑ –ó–∞–ø—Ä–æ–ø–æ–Ω—É–≤–∞—Ç–∏ –∫–µ–π—Å")],
        [KeyboardButton("üì• –ó–∞–ø—Ä–æ–ø–æ–Ω—É–≤–∞—Ç–∏ –∫–æ–Ω—Ç–µ–Ω—Ç"), KeyboardButton("‚ùì –ü–∏—Ç–∞–Ω–Ω—è —Ç–∞ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó")],
        [KeyboardButton("üîç –ü–æ—à—É–∫ –∫–æ–ª–µ–≥–∏")]
    ]
    reply_markup = ReplyKeyboardMarkup(buttons, resize_keyboard=True)
    await update.message.reply_text("–ü—Ä–∏–≤—ñ—Ç! –û–±–µ—Ä–∏ –æ–¥–Ω—É –∑ –æ–ø—Ü—ñ–π –Ω–∏–∂—á–µ:", reply_markup=reply_markup)

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    message = update.message
    text = message.text

    if text == "ü¶∑ –ó–∞–ø—Ä–æ–ø–æ–Ω—É–≤–∞—Ç–∏ –∫–µ–π—Å":
        example = (
            "üìå –ü—Ä–∏–∫–ª–∞–¥ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∫–µ–π—Å—É:\n"
            "‚Äî –°–ø–µ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è: –æ—Ä—Ç–æ–¥–æ–Ω—Ç—ñ—è\n"
            "‚Äî –í—ñ–∫ –ø–∞—Ü—ñ—î–Ω—Ç–∞: 28 —Ä–æ–∫—ñ–≤\n"
            "‚Äî –°–∫–∞—Ä–≥–∏: –µ—Å—Ç–µ—Ç–∏–∫–∞, —Å–∫—É–ø—á–µ–Ω—ñ—Å—Ç—å\n"
            "‚Äî –ü–ª–∞–Ω –ª—ñ–∫—É–≤–∞–Ω–Ω—è: –µ–ª–∞–π–Ω–µ—Ä–∏, IPR\n"
            "‚Äî –¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å: 8 –º—ñ—Å—è—Ü—ñ–≤\n"
            "‚Äî –†–µ–∑—É–ª—å—Ç–∞—Ç: –ø–æ–∫—Ä–∞—â–µ–Ω–∞ –µ—Å—Ç–µ—Ç–∏–∫–∞, —Å—Ç–∞–±—ñ–ª—å–Ω–∞ –æ–∫–ª—é–∑—ñ—è\n\n"
            "üì∏ –ù–∞–¥—ñ—à–ª–∏ —Å–≤—ñ–π –∫–µ–π—Å —É –ø–æ–¥—ñ–±–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ + —Ñ–æ—Ç–æ –∞–±–æ –≤—ñ–¥–µ–æ!"
        )
        await message.reply_text(example)

    elif text == "üì• –ó–∞–ø—Ä–æ–ø–æ–Ω—É–≤–∞—Ç–∏ –∫–æ–Ω—Ç–µ–Ω—Ç":
        await message.reply_text("üì© –ù–∞–¥—ñ—à–ª–∏ —Å–≤—ñ–π –º–∞—Ç–µ—Ä—ñ–∞–ª (—ñ–¥–µ—ó, —Å—Ç–∞—Ç—Ç—ñ, —à–∞–±–ª–æ–Ω–∏, –¥—É–º–∫–∏). –ú–∏ –ø–µ—Ä–µ–≥–ª—è–Ω–µ–º–æ –π, –º–æ–∂–ª–∏–≤–æ, –æ–ø—É–±–ª—ñ–∫—É—î–º–æ!")

    elif text == "‚ùì –ü–∏—Ç–∞–Ω–Ω—è —Ç–∞ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó":
        await message.reply_text("üó£ –ù–∞–ø–∏—à–∏ —Å–≤–æ—î –ø–∏—Ç–∞–Ω–Ω—è –∞–±–æ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—é ‚Äî –∫–æ–º–∞–Ω–¥–∞ dentalPro Hub –ø—Ä–æ—á–∏—Ç–∞—î –∫–æ–∂–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.")

    elif text == "üîç –ü–æ—à—É–∫ –∫–æ–ª–µ–≥–∏":
        await message.reply_text("üîé –ù–∞–ø–∏—à–∏, –∫–æ–≥–æ —à—É–∫–∞—î—à (—Å–ø–µ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è, –º—ñ—Å—Ç–æ, —Ñ–æ—Ä–º–∞—Ç —Å–ø—ñ–≤–ø—Ä–∞—Ü—ñ). –ú–∏ –¥–æ–ø–æ–º–æ–∂–µ–º–æ –∑–Ω–∞–π—Ç–∏ –ø–æ—Ç—Ä—ñ–±–Ω—É –ª—é–¥–∏–Ω—É.")

    else:
        try:
            await context.bot.copy_message(chat_id=MOD_GROUP_ID, from_chat_id=message.chat_id, message_id=message.message_id)
            await message.reply_text("‚úÖ –î—è–∫—É—î–º–æ! –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø–µ—Ä–µ–¥–∞–Ω–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º.")
        except Exception as e:
            await message.reply_text("‚ö†Ô∏è –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—ñ. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")

app = ApplicationBuilder().token(BOT_TOKEN).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(MessageHandler(filters.TEXT | filters.PHOTO | filters.VIDEO, handle_message))

app.run_polling()
